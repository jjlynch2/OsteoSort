##List of items to work on for the "traditional" osteomatric sorting app

1. Fix the unlinking parameters for tmp folders
2. Reactive plots instead of saving plots to files
3. Generate excel files when save is pressed
4. Remove the output functions
5. Consider removing the tmp directories since its reactive
6. Remove all code related to 2D, 3D, Stature, Outlier
7. Remove network graphs / functions
8. Configure reference data / define how this will look in authoritate reference set
9. Create two versions. One for docker. Might need a custom image that has Julia and R combined.
10. Remove exit button and desktop shortcut for deployed version (keep for normal R package installation)
11. Reconfigure the demographics based on collection, sex, ancestry.
12. The standalone will use the reference utility but the deployed version will use an SQL DB. Need to come up with an easy way to switch or just create two branches. 
13. Since we are reducing to just two options, swap out navmenu for links in navbar
14. Shiny-server isn't releasing memory with OsteoSort for some reason even though the R env does. Is this a problem for running the local webserver too? 
15. Rename regression to OSR
16. Fix deprecated functions (shinybs modals, etc)
17. Remove checkbox settings not needed (csv, plot, etc). Nobody turns theses off.
18. Package compiler and a sysimage for Julia (to have the memory pre-allocated to start up time) https://julialang.github.io/PackageCompiler.jl/dev/sysimages.html 
19. As an alternative consider using another mechanism to pass the -J flag to Julia as above. These include creating a desktop shortcut or a shell alias, $ alias julia='julia -J/path/to/sysimage.so', 
20. Create a shell alias so JuliaCall calls the alias with the sysimage attached????
19. Create a julia package with the code to avoid R loading it directly from source. 
20. Remove old R functions no longer used. 
